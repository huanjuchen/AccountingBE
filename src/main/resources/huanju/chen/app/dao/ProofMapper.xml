<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="huanju.chen.app.dao.ProofMapper">
    <insert id="save" parameterType="proof">
        INSERT INTO proof(id, date,
        invoice_count, manager, collection,
        recorder_id, cashier, payer,verify,verify_user_id,verify_time,trash)
        VALUES (NULL,#{date},#{invoiceCount},#{manager},
        #{collection},#{recorderId},#{cashier},#{payer},#{verify},#{verifyUserId},#{verifyTime},#{trash})
        <selectKey resultType="integer" keyProperty="id" keyColumn="id" order="AFTER">
            SELECT last_insert_id()
        </selectKey>
    </insert>

    <resultMap id="proofResultMap" type="proof">
        <id column="pId" property="id"/>
        <result column="pDate" property="date"/>
        <result column="pInvoiceCount" property="invoiceCount"/>
        <result column="pManager" property="manager"/>
        <result column="pCollection" property="collection"/>
        <result column="pRecorderId" property="recorderId"/>
        <result column="pCashier" property="cashier"/>
        <result column="pPayer" property="payer"/>
        <result column="pVerify" property="verify"/>
        <result column="pVerifyUserId" property="verifyUserId"/>
        <result column="pVerifyTime" property="verifyTime"/>
        <result column="pTrash" property="trash"/>
        <association property="recorder">
            <id column="uId" property="id"/>
            <result column="uUsername" property="username"/>
            <result column="uName" property="name"/>
            <result column="uRole" property="role"/>
        </association>
        <association property="verifyUser">
            <id column="vId" property="id"/>
            <result column="vUsername" property="username"/>
            <result column="vName" property="name"/>
            <result column="vRole" property="role"/>
        </association>
        <collection property="items" column="pId" select="huanju.chen.app.dao.ProofItemMapper.items"/>
    </resultMap>

    <resultMap id="listMap" type="proof">
        <id column="pId" property="id"/>
        <result column="pDate" property="date"/>
        <result column="pInvoiceCount" property="invoiceCount"/>
        <result column="pVerify" property="verify"/>
        <result column="pTrash" property="trash"/>
        <association property="recorder">
            <id column="uId" property="id"/>
            <result column="uUsername" property="username"/>
            <result column="uName" property="name"/>
        </association>
    </resultMap>

    <select id="find" resultMap="proofResultMap" parameterType="integer">
        SELECT p.id             AS pId,
               p.date           AS pDate,
               p.invoice_count  AS pInvoiceCount,
               p.manager        AS pManager,
               p.collection     AS pCollection,
               p.recorder_id    As pRecorderId,
               p.cashier        AS pCashier,
               p.payer          AS pPayer,
               p.verify         AS pVerify,
               p.verify_user_id AS pVerifyUserId,
               p.verify_time    AS pVerifyTime,
               p.trash          AS pTrash,
               u.id             AS uId,
               u.username       AS uUsername,
               u.name           AS uName,
               u.role           AS uRole,
               vu.id            AS vId,
               vu.username      AS vUsername,
               vu.name          AS vName,
               vu.role          AS vRole
        FROM proof p
                 LEFT JOIN user u ON u.id = p.recorder_id
                 LEFT JOIN user vu ON vu.id = p.verify_user_id
        WHERE p.id = #{key}
    </select>

    <select id="list" resultMap="listMap" parameterType="map">
        SELECT p.id AS pId,
        p.date AS pDate,
        p.invoice_count AS pInvoiceCount,
        p.verify AS pVerify,
        p.trash AS pTrash,
        u.id AS uId,
        u.username AS uUsername,
        u.name AS uName
        FROM proof p LEFT JOIN user u ON p.recorder_id=u.id
        <where>
            <if test="rid!=null">
                AND p.recorder_id=#{rid}
            </if>
            <if test="startDate!=null and endDate!=null">
                AND p.date BETWEEN #{startDate} AND #{endDate}
            </if>
            <if test="verify!=null">
                AND p.verify=#{verify}
            </if>
        </where>
        <if test="idDESC!=null">
            ORDER BY p.id DESC
        </if>

        <if test="idASC">
            ORDER BY p.id
        </if>
        <if test="dateDESC!=null">
            ORDER BY p.date DESC
        </if>
        <if test="dateASC!=null">
            ORDER BY p.date
        </if>
        <if test="ridDESC!=null">
            ORDER BY p.recorder_id DESC
        </if>
        <if test="ridASC!=null">
            ORDER BY p.recorder_id
        </if>
        <if test="offset!=null and count!=null">
            LIMIT #{offset},#{count}
        </if>
    </select>

    <select id="count" resultType="integer" parameterType="map">
        SELECT COUNT(id) FROM proof
        <where>
            <if test="rid!=null">
                AND recorder_id=#{rid}
            </if>
            <if test="startDate!=null and endDate!=null">
                AND date BETWEEN #{startDate} AND #{endDate}
            </if>
            <if test="verify!=null">
                AND verify=#{verify}
            </if>
        </where>
    </select>

    <update id="update" parameterType="proof">
        UPDATE proof
        <set>
            <if test="verify!=null">
                verify=#{verify},
            </if>
            <if test="verifyUserId!=null">
                verify_user_id=#{verifyUserId},
            </if>
            <if test="verifyTime!=null">
                verify_time=#{verifyTime},
            </if>
            <if test="trash!=null">
                trash=#{trash}
            </if>
        </set>
        WHERE id = #{id}
    </update>


</mapper>